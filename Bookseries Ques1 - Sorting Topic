#Bookseries : Ques1. 
""" 
    Given an Array A[ 0..... n-1] containing the repetition of few numbers.
    check whether their exists any repetitive number or not.. 
    Assume that we are not allowed to use additional space!

"""

#O(n) Using Extra Space
A = [ 1 , 2, 1, 2 ,1, 3]
D = {}
for a in A:
    if a in D:
        D[a] += 1
    else:
        D[a] = 1
L = D.values()
Lists = list(L)
for l in Lists:
    if l > 1:
        print("Yes , Duplicates do exists" , " << using Dictionary ")
        break

#O(n ** 2) Using Extra Space plus complexity is also quadratic.
Arr = [0 , 2 ,1 ,3 ,2]
NonDuplicates= []
for a in Arr:
    if a in NonDuplicates:
        print("Yes , Duplicates do exists" , "<< using another list")
        break
    NonDuplicates.append(a)


# I cannot use extra space 
# so in this we haven't used extra space but the time complexity is way too much O(n**2)
Arr = [0 , 2 ,1 ,3 ,2]
l = len(Arr)
for i in range(l):
    for j in range( i+1 , l):
        if A[i] == A[j]:
            print("Yes Duplicates do exists" , "<< using two for loops method")
            break
    break    

#optimizing the above approach!
Arr = [0 , 2, 1, 3 , 2]
Arr.sort()
leng = len(Arr)
for a in range(leng-1):
    if Arr[a] == Arr[a+1]:
        print("Yes , Duplicates exists." , " << Sorting method")

